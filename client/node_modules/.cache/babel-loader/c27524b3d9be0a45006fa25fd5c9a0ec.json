{"ast":null,"code":"import _classCallCheck from \"c:\\\\Users\\\\gudol\\\\UofU\\\\UTAHSAN201810FSF2-master\\\\Final Project\\\\ExpLore\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\gudol\\\\UofU\\\\UTAHSAN201810FSF2-master\\\\Final Project\\\\ExpLore\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\gudol\\\\UofU\\\\UTAHSAN201810FSF2-master\\\\Final Project\\\\ExpLore\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\gudol\\\\UofU\\\\UTAHSAN201810FSF2-master\\\\Final Project\\\\ExpLore\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\gudol\\\\UofU\\\\UTAHSAN201810FSF2-master\\\\Final Project\\\\ExpLore\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"c:\\\\Users\\\\gudol\\\\UofU\\\\UTAHSAN201810FSF2-master\\\\Final Project\\\\ExpLore\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"c:\\\\Users\\\\gudol\\\\UofU\\\\UTAHSAN201810FSF2-master\\\\Final Project\\\\ExpLore\\\\client\\\\src\\\\components\\\\Modals\\\\register.js\";\nimport React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\"; // import Form from \"react-bootstrap/Form\";\n\nimport { Col, Form } from \"react-bootstrap\"; // import ModalHeader from 'react-bootstrap/ModalHeader';\n// import ModalTitle from 'react-bootstrap/ModalTitle';\n// import ModalFooter from 'react-bootstrap/ModalFooter';\n// import ModalBody from 'react-bootstrap/ModalBody'\n// const {Formik} = formik;\n\nvar styles = {\n  margin: \"10px\"\n};\n\nvar Register =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Register, _React$Component);\n\n  function Register(props, context) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this, props, context));\n    _this.handleShow = _this.handleShow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      show: false,\n      validated: false\n    };\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        show: false\n      });\n    }\n  }, {\n    key: \"handleShow\",\n    value: function handleShow() {\n      this.setState({\n        show: true\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var form = event.currentTarget;\n\n      if (form.checkValidity() === false) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      this.setState({\n        validated: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var validated = this.state.validated;\n      return React.createElement(\"div\", {\n        style: styles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.handleShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Launch demo modal\"), React.createElement(Modal, {\n        size: \"lg\",\n        show: this.state.show,\n        animation: false,\n        onHide: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Form, {\n        noValidate: true,\n        validated: validated,\n        onSubmit: function onSubmit(e) {\n          return _this2.handleSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        md: \"4\",\n        controlId: \"characterName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Character Name\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"text\",\n        placeholder: \"Character Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        controlId: \"characterNameCheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Character Name Required\"), React.createElement(Form.Control.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Looks good!\")), React.createElement(Form.Group, {\n        as: Col,\n        md: \"4\",\n        controlId: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Email Address\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"email\",\n        placeholder: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        controlId: \"emailValidation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Email Address Required\"), React.createElement(Form.Control.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Looks good!\"))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        md: \"6\",\n        controlId: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Password\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        controlId: \"passwordCheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Must be over 6 characters long\")), React.createElement(Form.Group, {\n        as: Col,\n        md: \"6\",\n        controlId: \"password2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Re-enter Password\"), React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Re-Enter Password\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        controlId: \"passwordCheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Must be over 6 characters long\"))), React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Submit form\"), React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Already Registered\"))));\n    } // render() {\n    //   return (\n    //     <div>\n    //       <Button variant=\"primary\" onClick={this.handleShow}>\n    //         Launch demo modal\n    //         </Button>\n    //       <Modal size=\"lg\" show={this.state.show} animation={false} onHide={this.handleClose}>\n    //         <Modal.Header closeButton>\n    //           <Modal.Title>Modal heading</Modal.Title>\n    //         </Modal.Header>\n    //         <Modal.Body>\n    //           <Form>\n    //             <Form.Group controlId=\"formGroupUserName\">\n    //               <Form.Label>Character's Name</Form.Label>\n    //               <Form.Control type=\"username\" placeholder=\"Sir Greatness\" />\n    //             </Form.Group>\n    //             <Form.Group controlId=\"formGroupEmail\">\n    //               <Form.Label>Email address</Form.Label>\n    //               <Form.Control type=\"email\" placeholder=\"Enter email\" />\n    //             </Form.Group>\n    //             <Form.Group controlId=\"formGroupPassword\">\n    //               <Form.Label>Password</Form.Label>\n    //               <Form.Control type=\"password\" placeholder=\"Password\" />\n    //             </Form.Group>\n    //             <Form.Group controlId=\"formGroupPassword\">\n    //               <Form.Label>Re-Enter Password</Form.Label>\n    //               <Form.Control type=\"password2\" placeholder=\"Password\" />\n    //             </Form.Group>\n    //           </Form>\n    //         </Modal.Body>\n    //         <Modal.Footer>\n    //           <Button variant=\"secondary\" onClick={this.handleClose}>\n    //             Close\n    //             </Button>\n    //           <Button variant=\"primary\" onClick={this.handleClose}>\n    //             Save Changes\n    //             </Button>\n    //         </Modal.Footer>\n    //       </Modal>\n    //     </div>\n    //   );\n    // }}\n    // export default Register;\n    // class Register extends React.Component {\n    //     constructor(props, context) {\n    //       super(props, context);\n    //       this.handleShow = this.handleShow.bind(this);\n    //       this.handleClose = this.handleClose.bind(this);\n    //       this.state = {\n    //         show: false,\n    //       };\n    //     }\n    //     handleClose() {\n    //       this.setState({ show: false });\n    //     }\n    //     handleShow() {\n    //       this.setState({ show: true });\n    //     }\n    //     render() {\n    //       return (\n    //         <div>\n    //           <Button variant=\"primary\" onClick={this.handleShow}>\n    //             Launch demo modal\n    //           </Button>\n    //           <Modal size=\"lg\" show={this.state.show} animation={false} onHide={this.handleClose}>\n    //             <Modal.Header closeButton>\n    //               <Modal.Title>Modal heading</Modal.Title>\n    //             </Modal.Header>\n    //             <Modal.Body>\n    //               <h1>Woohoo, you're reading this text in a modal!</h1>\n    //             </Modal.Body>\n    //             <Modal.Footer>\n    //               <Button variant=\"secondary\" onClick={this.handleClose}>\n    //                 Close\n    //               </Button>\n    //               <Button variant=\"primary\" onClick={this.handleClose}>\n    //                 Save Changes\n    //               </Button>\n    //             </Modal.Footer>\n    //           </Modal>\n    //         </div>\n    //       );\n    //     }\n\n  }]);\n\n  return Register;\n}(React.Component);\n\nexport default Register;","map":{"version":3,"sources":["c:\\Users\\gudol\\UofU\\UTAHSAN201810FSF2-master\\Final Project\\ExpLore\\client\\src\\components\\Modals\\register.js"],"names":["React","Button","Modal","Col","Form","styles","margin","Register","props","context","handleShow","bind","handleClose","state","show","validated","setState","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","e","handleSubmit","Component"],"mappings":"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AI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBArDF,EAsDE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAtDF,CANF,CAJF,CADF;AAsED,K,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEF;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;EAhMuBH,KAAK,CAACyB,S;;AAkM7B,eAAelB,QAAf","sourcesContent":["import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n// import Form from \"react-bootstrap/Form\";\nimport { Col, Form } from \"react-bootstrap\";\n\n// import ModalHeader from 'react-bootstrap/ModalHeader';\n// import ModalTitle from 'react-bootstrap/ModalTitle';\n// import ModalFooter from 'react-bootstrap/ModalFooter';\n// import ModalBody from 'react-bootstrap/ModalBody'\n\n\n// const {Formik} = formik;\nvar styles = {\n  margin: \"10px\"\n};\nclass Register extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n\n    this.state = {\n      show: false,\n      validated: false\n    };\n  }\n\n  handleClose() {\n    this.setState({ show: false });\n  }\n\n  handleShow() {\n    this.setState({ show: true });\n  }\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.setState({ validated: true });\n  }\n\n  render() {\n    const { validated } = this.state;\n    return (\n      <div style={styles}>\n        <Button variant=\"primary\" onClick={this.handleShow}>\n          Launch demo modal\n        </Button>\n        <Modal\n          size=\"lg\"\n          show={this.state.show}\n          animation={false}\n          onHide={this.handleClose}\n        >\n          <Form\n            noValidate\n            validated={validated}\n            onSubmit={e => this.handleSubmit(e)}\n          >\n            <Form.Row>\n              <Form.Group as={Col} md=\"4\" controlId=\"characterName\">\n                <Form.Label>Character Name</Form.Label>\n                <Form.Control\n                  required\n                  type=\"text\"\n                  placeholder=\"Character Name\"\n                />\n                <Form.Control.Feedback\n                  type=\"invalid\"\n                  controlId=\"characterNameCheck\"\n                >\n                  Character Name Required\n                </Form.Control.Feedback>\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group as={Col} md=\"4\" controlId=\"email\">\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control required type=\"email\" placeholder=\"Email\" />\n                <Form.Control.Feedback\n                  type=\"invalid\"\n                  controlId=\"emailValidation\"\n                >\n                  Email Address Required\n                </Form.Control.Feedback>\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col} md=\"6\" controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Password\" required />\n                <Form.Control.Feedback type=\"invalid\" controlId=\"passwordCheck\">\n                  Must be over 6 characters long\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group as={Col} md=\"6\" controlId=\"password2\">\n                <Form.Label>Re-enter Password</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Re-Enter Password\"\n                  required\n                />\n                <Form.Control.Feedback type=\"invalid\" controlId=\"passwordCheck\">\n                  Must be over 6 characters long\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            <Button type=\"submit\">Submit form</Button>\n            <Button type=\"submit\">Already Registered</Button>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n  // render() {\n  //   return (\n  //     <div>\n  //       <Button variant=\"primary\" onClick={this.handleShow}>\n  //         Launch demo modal\n  //         </Button>\n  //       <Modal size=\"lg\" show={this.state.show} animation={false} onHide={this.handleClose}>\n  //         <Modal.Header closeButton>\n  //           <Modal.Title>Modal heading</Modal.Title>\n  //         </Modal.Header>\n  //         <Modal.Body>\n  //           <Form>\n  //             <Form.Group controlId=\"formGroupUserName\">\n  //               <Form.Label>Character's Name</Form.Label>\n  //               <Form.Control type=\"username\" placeholder=\"Sir Greatness\" />\n  //             </Form.Group>\n  //             <Form.Group controlId=\"formGroupEmail\">\n  //               <Form.Label>Email address</Form.Label>\n  //               <Form.Control type=\"email\" placeholder=\"Enter email\" />\n  //             </Form.Group>\n  //             <Form.Group controlId=\"formGroupPassword\">\n  //               <Form.Label>Password</Form.Label>\n  //               <Form.Control type=\"password\" placeholder=\"Password\" />\n  //             </Form.Group>\n  //             <Form.Group controlId=\"formGroupPassword\">\n  //               <Form.Label>Re-Enter Password</Form.Label>\n  //               <Form.Control type=\"password2\" placeholder=\"Password\" />\n  //             </Form.Group>\n  //           </Form>\n  //         </Modal.Body>\n  //         <Modal.Footer>\n  //           <Button variant=\"secondary\" onClick={this.handleClose}>\n  //             Close\n  //             </Button>\n  //           <Button variant=\"primary\" onClick={this.handleClose}>\n  //             Save Changes\n  //             </Button>\n  //         </Modal.Footer>\n  //       </Modal>\n  //     </div>\n  //   );\n  // }}\n\n// export default Register;\n\n// class Register extends React.Component {\n//     constructor(props, context) {\n//       super(props, context);\n  \n//       this.handleShow = this.handleShow.bind(this);\n//       this.handleClose = this.handleClose.bind(this);\n  \n//       this.state = {\n//         show: false,\n//       };\n//     }\n  \n//     handleClose() {\n//       this.setState({ show: false });\n//     }\n  \n//     handleShow() {\n//       this.setState({ show: true });\n//     }\n  \n//     render() {\n//       return (\n//         <div>\n//           <Button variant=\"primary\" onClick={this.handleShow}>\n//             Launch demo modal\n//           </Button>\n//           <Modal size=\"lg\" show={this.state.show} animation={false} onHide={this.handleClose}>\n//             <Modal.Header closeButton>\n//               <Modal.Title>Modal heading</Modal.Title>\n//             </Modal.Header>\n//             <Modal.Body>\n//               <h1>Woohoo, you're reading this text in a modal!</h1>\n//             </Modal.Body>\n//             <Modal.Footer>\n//               <Button variant=\"secondary\" onClick={this.handleClose}>\n//                 Close\n//               </Button>\n//               <Button variant=\"primary\" onClick={this.handleClose}>\n//                 Save Changes\n//               </Button>\n//             </Modal.Footer>\n//           </Modal>\n//         </div>\n//       );\n//     }\n}\nexport default Register;\n\n"]},"metadata":{},"sourceType":"module"}