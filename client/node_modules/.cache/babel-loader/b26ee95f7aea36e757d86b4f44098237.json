{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gudol\\\\UofU\\\\UTAHSAN201810FSF2-master\\\\Final Project\\\\ExpLore\\\\client\\\\src\\\\components\\\\Timer.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Countdown from 'react-countdown-now'; // Random component\n\nvar Completionist = function Completionist() {\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"You are good to go!\");\n}; // Renderer callback with condition\n\n\nvar renderer = function renderer(_ref) {\n  var hours = _ref.hours,\n      minutes = _ref.minutes,\n      seconds = _ref.seconds,\n      completed = _ref.completed;\n\n  if (completed) {\n    // Render a completed state\n    return React.createElement(Completionist, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    });\n  } else {\n    // Render a countdown\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, hours, \":\", minutes, \":\", seconds);\n  }\n};\n\nfunction Timer() {\n  return React.createElement(Countdown, {\n    date: Date.now() + 525600000,\n    renderer: renderer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  });\n}\n\n;\nexport default Timer;","map":{"version":3,"sources":["C:\\Users\\gudol\\UofU\\UTAHSAN201810FSF2-master\\Final Project\\ExpLore\\client\\src\\components\\Timer.js"],"names":["React","ReactDOM","Countdown","Completionist","renderer","hours","minutes","seconds","completed","Timer","Date","now"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,qBAAtB,C,CAEA;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAN;AAAA,CAAtB,C,CAEA;;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA4C;AAAA,MAAzCC,KAAyC,QAAzCA,KAAyC;AAAA,MAAlCC,OAAkC,QAAlCA,OAAkC;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AACzD,MAAIA,SAAJ,EAAe;AACX;AACA,WAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAHD,MAGO;AACH;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOH,KAAP,OAAeC,OAAf,OAAyBC,OAAzB,CAAP;AACH;AACJ,CARD;;AAUA,SAASE,KAAT,GAAiB;AACb,SACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAEC,IAAI,CAACC,GAAL,KAAa,SADvB;AAEI,IAAA,QAAQ,EAAEP,QAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAOH;;AAAA;AAED,eAAeK,KAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Countdown from 'react-countdown-now';\n\n// Random component\nconst Completionist = () => <span>You are good to go!</span>;\n\n// Renderer callback with condition\nconst renderer = ({ hours, minutes, seconds, completed }) => {\n    if (completed) {\n        // Render a completed state\n        return <Completionist />;\n    } else {\n        // Render a countdown\n        return <span>{hours}:{minutes}:{seconds}</span>;\n    }\n};\n\nfunction Timer() {\n    return (\n        <Countdown\n            date={Date.now() + 525600000}\n            renderer={renderer}\n        />\n    )\n\n};\n\nexport default Timer;"]},"metadata":{},"sourceType":"module"}