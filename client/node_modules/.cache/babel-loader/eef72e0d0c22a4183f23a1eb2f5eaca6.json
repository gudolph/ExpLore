{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\cantc\\\\UofU\\\\homework\\\\ExpLore\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\cantc\\\\UofU\\\\homework\\\\ExpLore\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\cantc\\\\UofU\\\\homework\\\\ExpLore\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\cantc\\\\UofU\\\\homework\\\\ExpLore\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\cantc\\\\UofU\\\\homework\\\\ExpLore\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\cantc\\\\UofU\\\\homework\\\\ExpLore\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\cantc\\\\UofU\\\\homework\\\\ExpLore\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\cantc\\\\UofU\\\\homework\\\\ExpLore\\\\client\\\\src\\\\components\\\\Modals\\\\register.js\";\nimport React from \"react\";\nimport API from \"../../utils/API\"; // import Form from \"react-bootstrap/Form\";\n\nimport { Col, Form, Modal, Button } from \"react-bootstrap\"; // const {Formik} = formik;\n\nvar styles = {\n  margin: \"10px\"\n};\n\nvar Register =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Register, _React$Component);\n\n  function Register(props, context) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this, props, context));\n\n    _this.handleSubmit = function (event) {\n      var that = _assertThisInitialized(_assertThisInitialized(_this));\n\n      console.log(\"i clicked\", event);\n      var form = event.currentTarget;\n      event.preventDefault();\n\n      if (form.checkValidity() === false) {\n        event.stopPropagation();\n      }\n\n      _this.setState({\n        validated: true\n      });\n\n      API.registerUser({\n        name: _this.state.name,\n        email: _this.state.email,\n        password: _this.state.password,\n        password2: _this.state.password2\n      }).then(function (data) {\n        console.log(data);\n        that.handleClose();\n      });\n    };\n\n    _this.handleInputChanges = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleShow = _this.handleShow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      show: true,\n      validated: false,\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        show: false\n      });\n    }\n  }, {\n    key: \"handleShow\",\n    value: function handleShow() {\n      this.setState({\n        show: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var validated = this.state.validated;\n      return React.createElement(\"div\", {\n        style: styles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        size: \"lg\",\n        show: this.state.show,\n        animation: false,\n        onHide: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Form, {\n        noValidate: true,\n        validated: validated,\n        onSubmit: function onSubmit(e) {\n          return _this2.handleSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        md: \"4\",\n        controlId: \"characterName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Character Name\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"text\",\n        onChange: this.handleInputChanges,\n        placeholder: \"Character Name\",\n        name: \"name\",\n        value: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        controlId: \"characterNameCheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Character Name Required\"), React.createElement(Form.Control.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Looks good!\")), React.createElement(Form.Group, {\n        as: Col,\n        md: \"4\",\n        controlId: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Email Address\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"email\",\n        placeholder: \"Email\",\n        onChange: this.handleInputChanges,\n        name: \"email\",\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        controlId: \"emailValidation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Email Address Required\"), React.createElement(Form.Control.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Looks good!\"))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        md: \"6\",\n        controlId: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Password\",\n        required: true,\n        onChange: this.handleInputChanges,\n        name: \"password\",\n        value: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        controlId: \"passwordCheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Must be over 6 characters long\")), React.createElement(Form.Group, {\n        as: Col,\n        md: \"6\",\n        controlId: \"password2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Re-enter Password\"), React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Re-Enter Password\",\n        required: true,\n        onChange: this.handleInputChanges,\n        name: \"password2\",\n        value: this.state.password2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        controlId: \"passwordCheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Must be over 6 characters long\"))), React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Submit form\"))));\n    }\n  }]);\n\n  return Register;\n}(React.Component);\n\nexport default Register;","map":{"version":3,"sources":["C:\\Users\\cantc\\UofU\\homework\\ExpLore\\client\\src\\components\\Modals\\register.js"],"names":["React","API","Col","Form","Modal","Button","styles","margin","Register","props","context","handleSubmit","event","that","console","log","form","currentTarget","preventDefault","checkValidity","stopPropagation","setState","validated","registerUser","name","state","email","password","password2","then","data","handleClose","handleInputChanges","target","value","handleShow","bind","show","e","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport API from \"../../utils/API\"\n// import Form from \"react-bootstrap/Form\";\nimport { Col, Form, Modal, Button } from \"react-bootstrap\";\n\n\n// const {Formik} = formik;\nvar styles = {\n  margin: \"10px\"\n};\nclass Register extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n\n    this.state = {\n      show: true,\n      validated: false,\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n\n\n    };\n  }\n\n  handleClose() {\n    this.setState({ show: false });\n  }\n\n  handleShow() {\n    this.setState({ show: true });\n  }\n\n  handleSubmit = event => {\n    var that = this;\n    console.log(\"i clicked\", event);\n    const form = event.currentTarget;\n    event.preventDefault();\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n    this.setState({ validated: true });\n    API.registerUser({\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n      \n    }).then(function(data){\n      console.log(data);\n      that.handleClose();\n    });\n  }\n\n  handleInputChanges = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n\n  }\n  render() {\n    const { validated } = this.state;\n    return (\n      <div style={styles}>\n\n        <Modal\n          size=\"lg\"\n          show={this.state.show}\n          animation={false}\n          onHide={this.handleClose}\n        >\n          <Form\n            noValidate\n            validated={validated}\n            onSubmit={e => this.handleSubmit(e)}\n          >\n            <Form.Row>\n              <Form.Group as={Col} md=\"4\" controlId=\"characterName\">\n                <Form.Label>Character Name</Form.Label>\n                <Form.Control\n                  required\n                  type=\"text\"\n                  onChange={this.handleInputChanges}\n                  placeholder=\"Character Name\"\n                  name=\"name\"\n                  value={this.state.name}\n                />\n                <Form.Control.Feedback\n                  type=\"invalid\"\n                  controlId=\"characterNameCheck\"\n                >\n                  Character Name Required\n                </Form.Control.Feedback>\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group as={Col} md=\"4\" controlId=\"email\">\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control \n                  required \n                  type=\"email\"\n                  placeholder=\"Email\"\n                  onChange={this.handleInputChanges}\n                  name=\"email\"\n                  value={this.state.email}\n                  />\n                <Form.Control.Feedback\n                  type=\"invalid\"\n                  controlId=\"emailValidation\"\n                >\n                  Email Address Required\n                </Form.Control.Feedback>\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col} md=\"6\" controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control \n                  type=\"text\"\n                  placeholder=\"Password\" \n                  required\n                  onChange={this.handleInputChanges}\n                  name=\"password\"\n                  value={this.state.password}\n                   />\n                <Form.Control.Feedback type=\"invalid\" controlId=\"passwordCheck\">\n                  Must be over 6 characters long\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group as={Col} md=\"6\" controlId=\"password2\">\n                <Form.Label>Re-enter Password</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Re-Enter Password\"\n                  required\n                  onChange={this.handleInputChanges}\n                  name=\"password2\"\n                  value={this.state.password2}\n                />\n                <Form.Control.Feedback type=\"invalid\" controlId=\"passwordCheck\">\n                  Must be over 6 characters long\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            <Button type=\"submit\" >Submit form</Button>\n            \n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}